version: '3.0'

networks:
  dh:
    external: true

services:
  #  producer:
  #    image: osipovmr/dh-kafka-producer:1
  #    container_name: kafka-producer
  #    ports:
  #      - "8080:8080"
  #    networks:
  #      - dh
  #
  #  consumer:
  #    image: osipovmr/dh-kafka-consumer:1
  #    container_name: kafka-consumer
  #    ports:
  #      - "8081:8081"
  #    networks:
  #      - dh
  #    depends_on:
  #      - producer
  #      - postgres
  #
  #  postgres:
  #    networks:
  #      - dh
  #    image: postgres:16
  #    container_name: postgres
  #    environment:
  #      POSTGRES_DB: "dh"
  #      POSTGRES_USER: "admin"
  #      POSTGRES_PASSWORD: "password"
  #    ports:
  #      - "5432:5432"
  #    volumes:
  #      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  kafka:
    image: apache/kafka:3.7.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_KRAFT_CLUSTER_ID: my-cluster-id
    #      KAFKA_BROKER_ID: 1
    #      KAFKA_LISTENERS: PLAINTEXT://:9092
    #      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    #      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - dh
  ui:
    image: provectuslabs/kafka-ui:v0.4.0
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - dh

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - dh