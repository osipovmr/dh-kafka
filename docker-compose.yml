version: '3.0'

networks:
  dh:
    external: true

services:

  producer:
    image: osipovmr/dh-kafka-producer:1
    container_name: kafka-producer
    ports:
      - "8081:8081"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - dh

  consumer:
    image: osipovmr/dh-kafka-consumer:1
    container_name: kafka-consumer
    ports:
      - "8082:8082"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      SPRING_KAFKA_CONSUMER_GROUP_ID: "dh-group-1"
    networks:
      - dh
    depends_on:
      - postgres
      - kafka

  postgres:
    networks:
      - dh
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: "dh"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "password"
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  kafka:
    image: apache/kafka:3.7.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      KAFKA_ALLOW_AUTO_CREATE_TOPICS: "true"
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: kafka:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_KRAFT_CLUSTER_ID: dh-cluster
      KAFKA_CREATE_TOPICS: "__consumer_offsets"
    networks:
      - dh

  ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_CLUSTERS_0_NAME: dh-osipov
    depends_on:
      - kafka
    networks:
      - dh